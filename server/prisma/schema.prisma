generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// * User enum
enum Role {
  ADMIN
  MODERATOR
  USER
}

model User {
  uid          String     @id @default(cuid())
  username     String     @unique
  fullName     String
  email        String     @unique
  password     String
  role         Role
  tokenVersion Int        @default(0)
  blogPosts    BlogPost[] @relation("blogAuthor")

  otp             String?   @unique
  otpExpiry       DateTime?
  isVerfied       Boolean   @default(false)
  otpRequestCount Int?      @default(0)
  lastOtpRequest  DateTime?
  cooldownExpiry  DateTime?

  createdAt DateTime @default(now()) @db.Timestamptz(3)
  updatedAt DateTime @updatedAt @db.Timestamptz(3)

  @@index([username]) // Index on username
  @@index([email]) // Index on email
  @@index([role, createdAt]) // Composite index on role and createdAt
  @@index([otp], name: "otp_user_idx") // Unique index for OTP lookups
  @@index([role, username], name: "role_name_user_idx")
}

model BlogPost {
  blogId              String  @id @default(cuid())
  author              User    @relation("blogAuthor", fields: [authorId], references: [uid], onDelete: Cascade)
  authorId            String
  blogTitle           String
  blogDescription     String
  blogSlug            String  @unique
  blogThumbnail       String
  blogThumbnailAuthor String
  isPublic            Boolean @default(false)

  createdAt DateTime @default(now()) @db.Timestamptz(3)
  updatedAt DateTime @updatedAt @db.Timestamptz(3)

  @@index([authorId]) // Index on authorId
  @@index([blogSlug]) // Index on blogSlug
  @@index([isPublic, createdAt]) // Composite index on isPublic and createdAt
}
